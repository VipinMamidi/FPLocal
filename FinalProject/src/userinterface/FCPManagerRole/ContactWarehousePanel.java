/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.FCPManagerRole;

import Business.EcoSystem;
import Business.FCPantry.FCPantry;
import Business.FCWarehouse.FCWarehouse;
import Business.UserAccount.UserAccount;
import java.awt.Dimension;
import java.awt.Image;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author sowmyachinimilli
 */
public class ContactWarehousePanel extends javax.swing.JPanel {

    /**
     * Creates new form ContactWarehousePanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAcc;
    String WHname;
    String FCPmgname;
    public ContactWarehousePanel(JPanel userProcessContainer,EcoSystem ecosystem,UserAccount userAcc) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.userAcc = userAcc;
        lblReqVol.setVisible(false);
        lblq.setVisible(false);
        cbQ.setVisible(false);
        btnReq.setVisible(false);
        FCPmgname = userAcc.getEmployee().getName();
        for(FCPantry fcp: ecosystem.getFCPDirectory().getFcpList()){
            if(fcp.getFcpManager().equals(FCPmgname)){
                 WHname = fcp.getFcpWHname();
            }
        }
        setBG();
        populatefields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDonProfileTitle = new javax.swing.JLabel();
        txtWHFCAdmin = new javax.swing.JTextField();
        lblWHname = new javax.swing.JLabel();
        txtWHname = new javax.swing.JTextField();
        lblWHPhno = new javax.swing.JLabel();
        txtWHPhno = new javax.swing.JTextField();
        lblWHAdd = new javax.swing.JLabel();
        txtWHAdd = new javax.swing.JTextField();
        lblWHCity = new javax.swing.JLabel();
        txtWHCity = new javax.swing.JTextField();
        lblWHState = new javax.swing.JLabel();
        txtWHState = new javax.swing.JTextField();
        lblWHZip = new javax.swing.JLabel();
        txtWHZip = new javax.swing.JTextField();
        lblWHFCAdmin = new javax.swing.JLabel();
        cbQ = new javax.swing.JComboBox<>();
        btnReq = new javax.swing.JButton();
        lblq = new javax.swing.JLabel();
        lblReqVol = new javax.swing.JLabel();
        LabelImg = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblDonProfileTitle.setFont(new java.awt.Font("Georgia", 1, 29)); // NOI18N
        lblDonProfileTitle.setForeground(new java.awt.Color(51, 153, 255));
        lblDonProfileTitle.setText("Food Cloud Warehouse");
        add(lblDonProfileTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(319, 19, -1, -1));

        txtWHFCAdmin.setEditable(false);
        txtWHFCAdmin.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWHFCAdmin.setEnabled(false);
        txtWHFCAdmin.setPreferredSize(new java.awt.Dimension(150, 25));
        txtWHFCAdmin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtWHFCAdminFocusLost(evt);
            }
        });
        add(txtWHFCAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 360, 137, -1));

        lblWHname.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblWHname.setText("Warehouse Name :");
        add(lblWHname, new org.netbeans.lib.awtextra.AbsoluteConstraints(357, 92, -1, -1));

        txtWHname.setEditable(false);
        txtWHname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWHname.setEnabled(false);
        txtWHname.setOpaque(true);
        txtWHname.setPreferredSize(new java.awt.Dimension(150, 25));
        txtWHname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtWHnameFocusLost(evt);
            }
        });
        add(txtWHname, new org.netbeans.lib.awtextra.AbsoluteConstraints(512, 88, 137, -1));

        lblWHPhno.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblWHPhno.setText("Phone Number :");
        add(lblWHPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(371, 135, -1, -1));

        txtWHPhno.setEditable(false);
        txtWHPhno.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWHPhno.setEnabled(false);
        txtWHPhno.setPreferredSize(new java.awt.Dimension(150, 25));
        txtWHPhno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtWHPhnoFocusLost(evt);
            }
        });
        add(txtWHPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(512, 131, 137, -1));

        lblWHAdd.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblWHAdd.setText("Address :");
        add(lblWHAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(415, 178, -1, -1));

        txtWHAdd.setEditable(false);
        txtWHAdd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWHAdd.setEnabled(false);
        txtWHAdd.setPreferredSize(new java.awt.Dimension(150, 25));
        add(txtWHAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(512, 174, 137, -1));

        lblWHCity.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblWHCity.setText("City :");
        add(lblWHCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(437, 221, -1, -1));

        txtWHCity.setEditable(false);
        txtWHCity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWHCity.setEnabled(false);
        txtWHCity.setPreferredSize(new java.awt.Dimension(150, 25));
        add(txtWHCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(512, 217, 137, -1));

        lblWHState.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblWHState.setText("State :");
        add(lblWHState, new org.netbeans.lib.awtextra.AbsoluteConstraints(432, 264, -1, -1));

        txtWHState.setEditable(false);
        txtWHState.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWHState.setEnabled(false);
        txtWHState.setPreferredSize(new java.awt.Dimension(150, 25));
        add(txtWHState, new org.netbeans.lib.awtextra.AbsoluteConstraints(512, 260, 137, -1));

        lblWHZip.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblWHZip.setText("Zipcode :");
        add(lblWHZip, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 320, -1, -1));

        txtWHZip.setEditable(false);
        txtWHZip.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWHZip.setEnabled(false);
        txtWHZip.setPreferredSize(new java.awt.Dimension(150, 25));
        txtWHZip.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtWHZipFocusLost(evt);
            }
        });
        add(txtWHZip, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 310, 137, -1));

        lblWHFCAdmin.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblWHFCAdmin.setText("Food Cloud Admin :");
        add(lblWHFCAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 360, -1, -1));

        cbQ.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbQ.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-select-", "10", "20", "30", "40", "50" }));
        add(cbQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 510, 132, -1));

        btnReq.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnReq.setText("Submit Request");
        btnReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReqActionPerformed(evt);
            }
        });
        add(btnReq, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 560, -1, -1));

        lblq.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblq.setText("Number of Volunteers Required :");
        add(lblq, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 510, -1, -1));

        lblReqVol.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblReqVol.setText("Request Volunteers");
        add(lblReqVol, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 450, -1, -1));
        add(LabelImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1500, 700));
    }// </editor-fold>//GEN-END:initComponents

       public void setBG() {
        try {
            LabelImg.setMinimumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setPreferredSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setMaximumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));

            Image img = ImageIO.read(getClass().getResource("/Images/blurbg.jpeg"));

            Image newimg = img.getScaledInstance(1500, userProcessContainer.getHeight(), java.awt.Image.SCALE_SMOOTH);
            LabelImg.setIcon(new ImageIcon(newimg));
        } catch (IOException ex) {

        }
    }
    private void txtWHFCAdminFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWHFCAdminFocusLost
        // TODO add your handling code here:
//        if(!(txtWHFCAdmin.getText().matches("^[a-zA-Z]*$"))){
//            lblWHFCAdmin1.setText("Invalid input. Please enter only alphabets.");
//        }
//        else{
//            lblWHFCAdmin1.setText("");
//        }
    }//GEN-LAST:event_txtWHFCAdminFocusLost

    private void txtWHnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWHnameFocusLost
        // TODO add your handling code here:
//        if(!(txtWHname.getText().matches("^[a-zA-Z]*$"))){
//            lblWHname1.setText("Invalid input. Please enter only alphabets");
//        }
//        else{
//            lblWHname1.setText("");
//        }
    }//GEN-LAST:event_txtWHnameFocusLost

    private void txtWHPhnoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWHPhnoFocusLost
        // TODO add your handling code here:
//        if(!(txtWHPhno.getText().matches("^[0-9]*$")) || !(txtWHPhno.getText().length()==10)) {
//            lblWHPhno1.setText("Please enter a valid phone number");
//        }
//        else{
//            lblWHPhno1.setText("");
//
//        }
    }//GEN-LAST:event_txtWHPhnoFocusLost

    private void txtWHZipFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWHZipFocusLost
        // TODO add your handling code here:
//        if((txtWHZip.getText().matches("^[a-zA-Z]*$"))){
//            lblWHZip1.setText("Invalid input. Please enter only numbers");
//        }
//        else{
//            lblWHZip1.setText("");
//        }
    }//GEN-LAST:event_txtWHZipFocusLost

    private void btnReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReqActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Your request has been sent to Warehouse");
    }//GEN-LAST:event_btnReqActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelImg;
    private javax.swing.JButton btnReq;
    private javax.swing.JComboBox<String> cbQ;
    private javax.swing.JLabel lblDonProfileTitle;
    private javax.swing.JLabel lblReqVol;
    private javax.swing.JLabel lblWHAdd;
    private javax.swing.JLabel lblWHCity;
    private javax.swing.JLabel lblWHFCAdmin;
    private javax.swing.JLabel lblWHPhno;
    private javax.swing.JLabel lblWHState;
    private javax.swing.JLabel lblWHZip;
    private javax.swing.JLabel lblWHname;
    private javax.swing.JLabel lblq;
    private javax.swing.JTextField txtWHAdd;
    private javax.swing.JTextField txtWHCity;
    private javax.swing.JTextField txtWHFCAdmin;
    private javax.swing.JTextField txtWHPhno;
    private javax.swing.JTextField txtWHState;
    private javax.swing.JTextField txtWHZip;
    private javax.swing.JTextField txtWHname;
    // End of variables declaration//GEN-END:variables

    private void populatefields() {
        for(FCWarehouse fcw : ecosystem.getFCWDirectory().getFcwList()){
            if(fcw.getFcwName().equals(WHname)){
                txtWHname.setText(fcw.getFcwName());
                txtWHPhno.setText(fcw.getFcwPhno());
                txtWHAdd.setText(fcw.getFcwAddres());
                txtWHCity.setText(fcw.getFcwCity());
                txtWHState.setText(fcw.getFcwState());
                txtWHZip.setText(fcw.getFcwZipcode());
                txtWHFCAdmin.setText(fcw.getFcwAdmin());
            }
        }
    }

}

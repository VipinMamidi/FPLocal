/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.FCAdminRole;

import Business.EcoSystem;
import Business.FCPantry.FCPantryItems;
import Business.FCPantry.FCPantryItemsDirectory;
import Business.UserAccount.UserAccount;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sowmyachinimilli
 */
public class ViewPantryItemsPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPantryItemsPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAcc;
    FCPantryItemsDirectory fcpid;
    String FCPname;

    public ViewPantryItemsPanel(JPanel userProcessContainer, EcoSystem ecosystem, UserAccount userAcc) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.userAcc = userAcc;
        populatePantryItemsTable();
        //FCPname = ecosystem.getFCPDirectory()
        viewPanel.setVisible(false);
        setBG();
        makeTableTransparent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAddWHTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblitems = new javax.swing.JTable();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        viewPanel = new javax.swing.JPanel();
        txtFDitem = new javax.swing.JTextField();
        txtFCPmg = new javax.swing.JTextField();
        lblWHname = new javax.swing.JLabel();
        txtFCPname = new javax.swing.JTextField();
        lblitemId1 = new javax.swing.JLabel();
        txtItemquan = new javax.swing.JTextField();
        txtWHname = new javax.swing.JTextField();
        lblFDitem = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        lblFCPmg = new javax.swing.JLabel();
        lblFCPname = new javax.swing.JLabel();
        lblitemId = new javax.swing.JLabel();
        lblFDitem1 = new javax.swing.JLabel();
        Cancel = new javax.swing.JButton();
        LabelImg = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        lblAddWHTitle.setFont(new java.awt.Font("Georgia", 1, 29)); // NOI18N
        lblAddWHTitle.setForeground(new java.awt.Color(51, 153, 255));
        lblAddWHTitle.setText("View/Modify Pantry Items");
        add(lblAddWHTitle);
        lblAddWHTitle.setBounds(320, 20, 410, 34);

        tblitems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Item Id", "Warehouse Name", "Pantry Name", "Pantry Manager", "Food Item", "Item Quantity"
            }
        ));
        tblitems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblitemsMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblitems);

        add(jScrollPane1);
        jScrollPane1.setBounds(0, 80, 1140, 153);

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        add(btnEdit);
        btnEdit.setBounds(960, 260, 92, 29);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete);
        btnDelete.setBounds(1050, 260, 92, 29);

        viewPanel.setOpaque(false);
        viewPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtFDitem.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFDitem.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFDitem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFDitemFocusLost(evt);
            }
        });
        txtFDitem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFDitemKeyReleased(evt);
            }
        });
        viewPanel.add(txtFDitem, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 210, 137, -1));

        txtFCPmg.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPmg.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFCPmg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFCPmgFocusLost(evt);
            }
        });
        txtFCPmg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFCPmgKeyReleased(evt);
            }
        });
        viewPanel.add(txtFCPmg, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 137, -1));

        lblWHname.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblWHname.setText("Warehouse Name :");
        viewPanel.add(lblWHname, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, -1, -1));

        txtFCPname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPname.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFCPname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFCPnameFocusLost(evt);
            }
        });
        txtFCPname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFCPnameKeyReleased(evt);
            }
        });
        viewPanel.add(txtFCPname, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 137, -1));

        lblitemId1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        viewPanel.add(lblitemId1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, 130, 20));

        txtItemquan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtItemquan.setPreferredSize(new java.awt.Dimension(150, 25));
        txtItemquan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtItemquanFocusLost(evt);
            }
        });
        txtItemquan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtItemquanKeyReleased(evt);
            }
        });
        viewPanel.add(txtItemquan, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 260, 137, -1));

        txtWHname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWHname.setPreferredSize(new java.awt.Dimension(150, 25));
        txtWHname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtWHnameFocusLost(evt);
            }
        });
        txtWHname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtWHnameKeyReleased(evt);
            }
        });
        viewPanel.add(txtWHname, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, 137, -1));

        lblFDitem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblFDitem.setText("Food Item :");
        viewPanel.add(lblFDitem, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, -1, -1));

        btnUpdate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        viewPanel.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 310, 92, -1));

        lblFCPmg.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblFCPmg.setText("Pantry Manager :");
        viewPanel.add(lblFCPmg, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, -1, -1));

        lblFCPname.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblFCPname.setText("Pantry Name :");
        viewPanel.add(lblFCPname, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, -1, -1));

        lblitemId.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblitemId.setText("Item Id :");
        viewPanel.add(lblitemId, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, -1, -1));

        lblFDitem1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblFDitem1.setText("Item Quantity :");
        viewPanel.add(lblFDitem1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, -1, -1));

        Cancel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });
        viewPanel.add(Cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 310, 90, -1));

        add(viewPanel);
        viewPanel.setBounds(140, 250, 450, 410);
        add(LabelImg);
        LabelImg.setBounds(0, 0, 3220, 950);
    }// </editor-fold>//GEN-END:initComponents

    public void setBG() {
        try {
            LabelImg.setMinimumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setPreferredSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setMaximumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));

            Image img = ImageIO.read(getClass().getResource("/Images/blurbg.jpeg"));

            Image newimg = img.getScaledInstance(1500, userProcessContainer.getHeight(), java.awt.Image.SCALE_SMOOTH);
            LabelImg.setIcon(new ImageIcon(newimg));
        } catch (IOException ex) {

        }
    }

    public void makeTableTransparent() {
        tblitems.setOpaque(false);
        ((DefaultTableCellRenderer) tblitems.getDefaultRenderer(Object.class)).setOpaque(false);
        tblitems.setShowGrid(false);
        jScrollPane1.setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);

        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setBackground(Color.WHITE);

        for (int i = 0; i < tblitems.getModel().getColumnCount(); i++) {
            tblitems.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }
    }

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblitems.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a record to Edit");
            return;
        }
        viewPanel.setVisible(true);
        DefaultTableModel model = (DefaultTableModel) tblitems.getModel();
        FCPantryItems selectedFCPI = (FCPantryItems) model.getValueAt(selectedRowIndex, 0);
        lblitemId1.setText(selectedFCPI.getFcpitemid());
        txtWHname.setText(selectedFCPI.getFcpWHname());
        txtFCPname.setText(selectedFCPI.getPantryName());
        txtFCPmg.setText(selectedFCPI.getPantryManager());
        txtFDitem.setText(selectedFCPI.getFoodItem());
        txtItemquan.setText(String.valueOf(selectedFCPI.getFoodQuan()));
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblitems.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a record to delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblitems.getModel();
        FCPantryItems selectedFCPI = (FCPantryItems) model.getValueAt(selectedRowIndex, 0);
        /* // First delete the customer from employee
        this.system.getEmployeeDirectory().deleteEmployee(selectedRest.getResManagerName());
        // And thne delete the userAccount
        this.system.getUserAccountDirectory().deleteUserAcc(
            this.system.getRestaurantDirectory().getResList().
            get(selectedRowIndex).getUserAcc()
        );
        // finally delete the user from customer directory*/
        //  ecosystem.getFCPDirectory().deleteFCPantry(selectedFCP);
        fcpid = ecosystem.getFCPIDirectory();
        fcpid.deleteFCPItems(selectedFCPI);
        ecosystem.setFCPIDirectory(fcpid);
        JOptionPane.showMessageDialog(this, "Pantry Item deleted Successfully");
        populatePantryItemsTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtWHnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWHnameFocusLost
        // TODO add your handling code here:
        if (!(txtWHname.getText().matches("^[a-zA-Z]*$"))) {
            lblFCPmg.setText("Invalid input. Please enter only alphabets");
        } else {
            lblFCPmg.setText("");
        }
    }//GEN-LAST:event_txtWHnameFocusLost

    private void txtWHnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWHnameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWHnameKeyReleased

    private void txtFCPnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFCPnameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFCPnameFocusLost

    private void txtFCPnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFCPnameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFCPnameKeyReleased

    private void txtFCPmgFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFCPmgFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFCPmgFocusLost

    private void txtFCPmgKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFCPmgKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFCPmgKeyReleased

    private void txtFDitemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFDitemFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFDitemFocusLost

    private void txtFDitemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFDitemKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFDitemKeyReleased

    private void txtItemquanFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtItemquanFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemquanFocusLost

    private void txtItemquanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemquanKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemquanKeyReleased

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblitems.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a record to update");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblitems.getModel();
        String FCPid = lblitemId1.getText();
        ArrayList<FCPantryItems> fcpiList = ecosystem.getFCPIDirectory().getFcpiList();
        for (FCPantryItems f : fcpiList) {
            if (f.getFcpitemid().equals(FCPid)) {
                f.setFcpWHname(txtWHname.getText());
                f.setPantryName(txtFCPname.getText());
                f.setPantryManager(txtFCPmg.getText());
                f.setFoodItem(txtFDitem.getText());
                f.setFoodQuan(Integer.parseInt(txtItemquan.getText()));
                //UserAccount FCPua=new UserAccount();
                //FCPua.setUsername(txtFCPuname.getText());
                //FCPua.setPassword(txtFCPpwd.getText());
                //f.setFcpAccount(FCPua);
            }

        }
        // ecosystem.setFCWDirectory(fcwList);
        JOptionPane.showMessageDialog(this, "Pantry Item details updated successfully");
        clearfields();
        populatePantryItemsTable();
        viewPanel.setVisible(false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        // TODO add your handling code here:
       viewPanel.setVisible(false);
    }//GEN-LAST:event_CancelActionPerformed

    private void tblitemsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblitemsMousePressed
        // TODO add your handling code here:
        tblitems.setSelectionForeground(Color.BLUE);
    }//GEN-LAST:event_tblitemsMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancel;
    private javax.swing.JLabel LabelImg;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddWHTitle;
    private javax.swing.JLabel lblFCPmg;
    private javax.swing.JLabel lblFCPname;
    private javax.swing.JLabel lblFDitem;
    private javax.swing.JLabel lblFDitem1;
    private javax.swing.JLabel lblWHname;
    private javax.swing.JLabel lblitemId;
    private javax.swing.JLabel lblitemId1;
    private javax.swing.JTable tblitems;
    private javax.swing.JTextField txtFCPmg;
    private javax.swing.JTextField txtFCPname;
    private javax.swing.JTextField txtFDitem;
    private javax.swing.JTextField txtItemquan;
    private javax.swing.JTextField txtWHname;
    private javax.swing.JPanel viewPanel;
    // End of variables declaration//GEN-END:variables

    private void populatePantryItemsTable() {
        DefaultTableModel model = (DefaultTableModel) tblitems.getModel();
        model.setRowCount(0);
        for (FCPantryItems fcpi : ecosystem.getFCPIDirectory().getFcpiList()) {
            Object[] row = new Object[6];
            row[0] = fcpi;
            row[1] = fcpi.getFcpWHname();
            row[2] = fcpi.getPantryName();
            row[3] = fcpi.getPantryManager();
            row[4] = fcpi.getFoodItem();
            row[5] = fcpi.getFoodQuan();
            model.addRow(row);
        }
    }

    private void clearfields() {
        txtWHname.setText("");
        txtFCPname.setText("");
        txtFCPmg.setText("");
        txtFDitem.setText("");
        txtItemquan.setText("");
        lblitemId1.setText("");
    }
}
